// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using QuanLyHocSinh.DAL.Model;
using System;

namespace QuanLyHocSinh.DAL.Migrations
{
    [DbContext(typeof(QuanLyHocSinhSqlContext))]
    partial class QuanLyHocSinhSqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("USERNAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("Idtype")
                        .HasColumnName("IDTYPE");

                    b.Property<string>("Password")
                        .HasColumnName("PASSWORD")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Username");

                    b.HasIndex("Idtype")
                        .HasName("FK_TYPEACCOUNT_IN_ACCOUNT_FK");

                    b.ToTable("ACCOUNT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Class", b =>
                {
                    b.Property<string>("Idclass")
                        .HasColumnName("IDCLASS")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("Gradelevelid")
                        .HasColumnName("GRADELEVELID");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Idclass");

                    b.HasIndex("Gradelevelid")
                        .HasName("FK_CLASS_IN_GRADELEVEL_FK");

                    b.ToTable("CLASS");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Gradelevel", b =>
                {
                    b.Property<double>("Gradelevelid")
                        .HasColumnName("GRADELEVELID");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Gradelevelid");

                    b.ToTable("GRADELEVEL");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Learningoutcomes", b =>
                {
                    b.Property<string>("Learningoutcomesid")
                        .HasColumnName("LEARNINGOUTCOMESID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Conduct")
                        .HasColumnName("CONDUCT")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Grade")
                        .HasColumnName("GRADE")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("Mediumscore")
                        .HasColumnName("MEDIUMSCORE");

                    b.Property<string>("Mshocsinh")
                        .HasColumnName("MSHOCSINH")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Schoolyearid")
                        .HasColumnName("SCHOOLYEARID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Typeresultid")
                        .HasColumnName("TYPERESULTID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Learningoutcomesid");

                    b.HasIndex("Mshocsinh")
                        .HasName("RELATIONSHIP_6_FK");

                    b.HasIndex("Schoolyearid")
                        .HasName("FK_FK");

                    b.HasIndex("Typeresultid")
                        .HasName("FK_TR_IN_LO");

                    b.ToTable("LEARNINGOUTCOMES");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Schoolyear", b =>
                {
                    b.Property<string>("Schoolyearid")
                        .HasColumnName("SCHOOLYEARID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Schoolyearid");

                    b.ToTable("SCHOOLYEAR");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Semester", b =>
                {
                    b.Property<double>("Semesterid")
                        .HasColumnName("SEMESTERID");

                    b.Property<double?>("Coefficient")
                        .HasColumnName("COEFFICIENT");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Semesterid");

                    b.ToTable("SEMESTER");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Student", b =>
                {
                    b.Property<string>("Mshocsinh")
                        .HasColumnName("MSHOCSINH")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnName("BIRTHDAY")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("PHONE")
                        .HasColumnType("char(12)");

                    b.Property<double?>("Sex")
                        .HasColumnName("SEX");

                    b.HasKey("Mshocsinh");

                    b.ToTable("STUDENT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Studentinclass", b =>
                {
                    b.Property<string>("Schoolyearid")
                        .HasColumnName("SCHOOLYEARID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Idclass")
                        .HasColumnName("IDCLASS")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Mshocsinh")
                        .HasColumnName("MSHOCSINH")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Schoolyearid", "Idclass", "Mshocsinh");

                    b.HasIndex("Idclass")
                        .HasName("STUDENTINCLASS2_FK");

                    b.HasIndex("Mshocsinh")
                        .HasName("STUDENTINCLASS3_FK");

                    b.HasIndex("Schoolyearid")
                        .HasName("STUDENTINCLASS_FK");

                    b.ToTable("STUDENTINCLASS");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Subject", b =>
                {
                    b.Property<string>("Subjectid")
                        .HasColumnName("SUBJECTID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Subjectid");

                    b.ToTable("SUBJECT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Testscores", b =>
                {
                    b.Property<string>("Subjectid")
                        .HasColumnName("SUBJECTID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double>("Semesterid")
                        .HasColumnName("SEMESTERID");

                    b.Property<string>("Schoolyearid")
                        .HasColumnName("SCHOOLYEARID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Mshocsinh")
                        .HasColumnName("MSHOCSINH")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double?>("Score15m")
                        .HasColumnName("SCORE_15M");

                    b.Property<double?>("Score45m")
                        .HasColumnName("SCORE_45M");

                    b.Property<double?>("Score5m")
                        .HasColumnName("SCORE_5M");

                    b.Property<double?>("ScoreEndyear")
                        .HasColumnName("SCORE_ENDYEAR");

                    b.Property<double?>("ScoreMidyear")
                        .HasColumnName("SCORE_MIDYEAR");

                    b.HasKey("Subjectid", "Semesterid", "Schoolyearid", "Mshocsinh");

                    b.HasIndex("Mshocsinh")
                        .HasName("TESTSCORES4_FK");

                    b.HasIndex("Schoolyearid")
                        .HasName("TESTSCORES3_FK");

                    b.HasIndex("Semesterid")
                        .HasName("TESTSCORES2_FK");

                    b.HasIndex("Subjectid")
                        .HasName("TESTSCORES_FK");

                    b.ToTable("TESTSCORES");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Typeaccount", b =>
                {
                    b.Property<double>("Idtype")
                        .HasColumnName("IDTYPE");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Idtype");

                    b.ToTable("TYPEACCOUNT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Typeresult", b =>
                {
                    b.Property<string>("Typeresultid")
                        .HasColumnName("TYPERESULTID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Typeresultid");

                    b.ToTable("TYPERESULT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Account", b =>
                {
                    b.HasOne("QuanLyHocSinh.DAL.Model.Typeaccount", "IdtypeNavigation")
                        .WithMany("Account")
                        .HasForeignKey("Idtype")
                        .HasConstraintName("FK_ACCOUNT_TYPEACCOUNT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Class", b =>
                {
                    b.HasOne("QuanLyHocSinh.DAL.Model.Gradelevel", "Gradelevel")
                        .WithMany("Class")
                        .HasForeignKey("Gradelevelid")
                        .HasConstraintName("FK_CLASS_GRADELEVEL");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Learningoutcomes", b =>
                {
                    b.HasOne("QuanLyHocSinh.DAL.Model.Student", "MshocsinhNavigation")
                        .WithMany("Learningoutcomes")
                        .HasForeignKey("Mshocsinh")
                        .HasConstraintName("FK_LEARNINGOUTCOMES_STUDENT");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Schoolyear", "Schoolyear")
                        .WithMany("Learningoutcomes")
                        .HasForeignKey("Schoolyearid")
                        .HasConstraintName("FK_LEARNINGOUTCOMES_SCHOOLYEAR");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Typeresult", "Typeresult")
                        .WithMany("Learningoutcomes")
                        .HasForeignKey("Typeresultid")
                        .HasConstraintName("FK_LEARNINGOUTCOMES_TYPERESULT");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Studentinclass", b =>
                {
                    b.HasOne("QuanLyHocSinh.DAL.Model.Class", "IdclassNavigation")
                        .WithMany("Studentinclass")
                        .HasForeignKey("Idclass")
                        .HasConstraintName("FK_STUDENTINCLASS_CLASS");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Student", "MshocsinhNavigation")
                        .WithMany("Studentinclass")
                        .HasForeignKey("Mshocsinh")
                        .HasConstraintName("FK__STUDENTIN__MSHOC__5AEE82B9");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Schoolyear", "Schoolyear")
                        .WithMany("Studentinclass")
                        .HasForeignKey("Schoolyearid")
                        .HasConstraintName("FK_STUDENTINCLASS_SCHOOLYEAR");
                });

            modelBuilder.Entity("QuanLyHocSinh.DAL.Model.Testscores", b =>
                {
                    b.HasOne("QuanLyHocSinh.DAL.Model.Student", "MshocsinhNavigation")
                        .WithMany("Testscores")
                        .HasForeignKey("Mshocsinh")
                        .HasConstraintName("FK_TESTSCORES_STUDENT");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Schoolyear", "Schoolyear")
                        .WithMany("Testscores")
                        .HasForeignKey("Schoolyearid")
                        .HasConstraintName("FK_TESTSCORES_SCHOOLYEAR");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Semester", "Semester")
                        .WithMany("Testscores")
                        .HasForeignKey("Semesterid")
                        .HasConstraintName("FK_TESTSCORES_SEMESTER");

                    b.HasOne("QuanLyHocSinh.DAL.Model.Subject", "Subject")
                        .WithMany("Testscores")
                        .HasForeignKey("Subjectid")
                        .HasConstraintName("FK_TESTSCORES_SUBJECT");
                });
#pragma warning restore 612, 618
        }
    }
}
